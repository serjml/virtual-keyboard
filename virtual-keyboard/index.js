// –º–∞—Å—Å–∏–≤ –∏–∑ 5 —Ä—è–¥–æ–≤  
// –∫–∞–∂–¥—ã–π —Ä—è–¥ –º–∞—Å—Å–∏–≤
// –∫–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –º–∞—Å—Å–∏–≤ [code, en, en-shift, ru, ru-shift];
const keysRows = [
  [
    ['Backquote','`', '~', '—ë', '–Å'],
    ['Digit1', '1', '!', '1', '!'],
    ['Digit2', '2', '@', '2', '"'],
    ['Digit3', '3', '#', '3', '‚Ññ'],
    ['Digit4', '4', '$', '4', ';'],
    ['Digit5', '5', '%', '5', '%'],
    ['Digit6', '6', '^', '6', ':'],
    ['Digit7', '7', '&', '7', '?'],
    ['Digit8', '8', '*', '8', '*'],
    ['Digit9', '9', '(', '9', '('],
    ['Digit0', '0', ')', '0', ')'],
    ['Minus', '-', '_', '-', '_'],
    ['Equal', '=', '+', '=', '+'],
    ['Backspace', '‚á¶', 'BACKSPACE', 'BACKSPACE', 'BACKSPACE'],
  ],
  [
    ['Tab','TAB', 'TAB', 'TAB', 'TAB'],
    ['KeyQ', 'q', 'Q', '–π', '–ô'],
    ['KeyW', 'w', 'W', '—Ü', '–¶'],
    ['KeyE', 'e', 'E', '—É', '–£'],
    ['KeyR', 'r', 'R', '–∫', '–ö'],
    ['KeyT', 't', 'T', '–µ', '–ï'],
    ['KeyY', 'y', 'Y', '–Ω', '–ù'],
    ['KeyU', 'u', 'U', '–≥', '–ì'],
    ['KeyI', 'i', 'I', '—à', '–®'],
    ['KeyO', 'o', 'O', '—â', '–©'],
    ['KeyP', 'p', 'P', '–∑', '–ó'],
    ['BracketLeft', '[', '{', '—Ö', '–•'],
    ['BracketRight', ']', '}', '—ä', '–™'],
    ['Backslash', '\\', '|', '\\', '/'],
    ['Delete', 'DEL', 'DEL', 'DEL', 'DEL'],
  ],
  [
    ['CapsLock','CAPS', 'CAPS', 'CAPS', 'CAPS'],
    ['KeyA', 'a', 'A', '—Ñ', '–§'],
    ['KeyS', 's', 'S', '—ã', '–´'],
    ['KeyD', 'd', 'D', '–≤', '–í'],
    ['KeyF', 'f', 'F', '–∞', '–ê'],
    ['KeyG', 'g', 'G', '–ø', '–ü'],
    ['KeyH', 'h', 'H', '—Ä', '–†'],
    ['KeyJ', 'j', 'J', '–æ', '–û'],
    ['KeyK', 'k', 'K', '–ª', '–õ'],
    ['KeyL', 'l', 'L', '–¥', '–î'],
    ['Semicolon', ';', ':', '–∂', '–ñ'],
    ['Quote', '\'', '"', '—ç', '–≠'],
    ['Enter', 'ENTER', 'ENTER', 'ENTER', 'ENTER'],
  ],
  [
    ['ShiftLeft','SHIFT', 'SHIFT', 'SHIFT', 'SHIFT'],
    ['KeyZ', 'z', 'Z', '—è', '–Ø'],
    ['KeyX', 'x', 'X', '—á', '–ß'],
    ['KeyC', 'c', 'C', '—Å', '–°'],
    ['KeyV', 'v', 'V', '–º', '–ú'],
    ['KeyB', 'b', 'B', '–∏', '–ò'],
    ['KeyN', 'n', 'N', '—Ç', '–¢'],
    ['KeyM', 'm', 'M', '—å', '–¨'],
    ['NumpadDecimal', ',', '<', '–±', '–ë'],
    ['Period', '.', '>', '—é', '–Æ'],
    ['Slash', '/', '?', '.', ','],
    ['ArrowUp', 'ü¢Å', 'ü¢Å', 'ü¢Å', 'ü¢Å'],
    ['ShiftRight', 'SHIFT', 'SHIFT', 'SHIFT', 'SHIFT'],
  ],
  [
    ['ControlLeft','CTRL', 'CTRL', 'CTRL', 'CTRL'],
    ['MetaLeft', 'WIN', 'WIN', 'WIN', 'WIN'],
    ['AltLeft', 'ALT', 'ALT', 'ALT', 'ALT'],
    ['Space', '', '', '', ''],
    ['AltRight', 'ALT', 'ALT', 'ALT', 'ALT'],
    ['ArrowLeft', 'ü¢Ä', 'ü¢Ä', 'ü¢Ä', 'ü¢Ä'],
    ['ArrowDown', 'ü¢É', 'ü¢É', 'ü¢É', 'ü¢É'],
    ['ArrowRight', 'ü¢Ç', 'ü¢Ç', 'ü¢Ç', 'ü¢Ç'],
    ['ControlRight', 'CTRL', 'CTRL', 'CTRL', 'CTRL'],    
  ],
]

// —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
const container = document.createElement('div');
container.className = 'container';
document.body.append(container);

const title = document.createElement('h1');
title.className = 'title';
container.append(title);
title.innerText = 'RSS –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞';

const textarea = document.createElement('textarea');
textarea.className = 'textarea';
textarea.setAttribute('id', 'textarea');
textarea.removeAttribute('style');
container.append(textarea);

const keyboard = document.createElement('div');
keyboard.className = 'keyboard';
keyboard.setAttribute('id', 'keyboard');
container.append(keyboard);

const description = document.createElement('p');
description.className = 'description';
container.append(description);
description.innerText = '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ Windows';

const combination = document.createElement('p');
combination.className = 'combination';
container.append(combination);
combination.innerText = '–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: –ª–µ–≤—ãe ctrl + alt';

// —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function createKeys() {
  for (let i = 0; i < keysRows.length; i++ ) {
    const row = document.createElement('div');
    row.className = 'row';
    keyboard.append(row);
    
    for (let j = 0; j < keysRows[i].length; j++) {
      const key = document.createElement('div');
      key.className = `key ${keysRows[i][j][0]}`;
      row.append(key)
      key.innerText = `${keysRows[i][j][1]}`
    }
  }  
}
createKeys();

document.body.addEventListener('click', () => textarea.focus());
const keys = document.querySelectorAll('.key');

keys.forEach(el => {
  el.addEventListener('click', () => {
    textarea.value += el.textContent;
  });

  el.addEventListener('mouseover', () => {
    el.classList.add('hover');
    el.classList.remove('active');
  })

  el.addEventListener('mouseout', () => {
    el.classList.remove('hover');
    el.classList.remove('active');
  })

  el.addEventListener('mousedown', () => {
    el.classList.add('active');
    el.classList.remove('hover');
  })

  el.addEventListener('mouseup', () => {
    el.classList.remove('active');
    el.classList.add('hover');
  })
})

// —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥ —Ä–∞—Å–∫–ª–∞–¥–∫—É !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
function addKeboardKeys(event) {
  event.preventDefault();
  const allKeys = keysRows.flat(2);
  let currentClass = '.' + event.code;
  let currentKey = document.querySelector(currentClass);

  if (allKeys.some(el => el === event.code)) {
    textarea.value += event.key;
    currentKey.classList.add('active');
    document.addEventListener('keyup', () => currentKey.classList.remove('active'))
  }  
}

document.addEventListener('keydown', addKeboardKeys);
